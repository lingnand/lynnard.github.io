<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: zsh | .hack/lynnard]]></title>
  <link href="http://lynnard.tk/blog/categories/zsh/atom.xml" rel="self"/>
  <link href="http://lynnard.tk/"/>
  <updated>2014-11-01T10:00:07+00:00</updated>
  <id>http://lynnard.tk/</id>
  <author>
    <name><![CDATA[Lynnard]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Change cursor shape for zsh vi-mode]]></title>
    <link href="http://lynnard.tk/blog/2014/01/05/change-cursor-shape-for-zsh-vi-mode/"/>
    <updated>2014-01-05T18:36:00+00:00</updated>
    <id>http://lynnard.tk/blog/2014/01/05/change-cursor-shape-for-zsh-vi-mode</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been using zsh and its wonderful <em>vi-mode</em> line editing keybindings for a long time, but one thing that has always troubled me is the lack of visual clues to the current <em>mode</em>.</p>

<p>With <a href="https://github.com/robbyrussell/oh-my-zsh">oh-my-zsh</a> you can optionally have an indicator to the right of the prompt telling you this, but I feel it&rsquo;s not <em>native</em> enough - we need something simpler and more direct, just as in vim I&rsquo;ve set my cursor to be an underscore in the insert mode and a solid block in the command mode.</p>

<p>Luckily you can do just that with the powerful zsh shell.</p>

<p>First off the relevant escape sequences for changing the cursor shape are:</p>

<ul>
<li><code>"\e[4 q"</code>: solid underscore</li>
<li><code>"\e[2 q"</code>: solid block</li>
</ul>


<p>The hook called when your vi mode changes is <code>zle-keymap-select</code>. If you want comprehensiveness, also include <code>zle-line-init</code> and <code>zle-line-finish</code>.</p>

<p>Now just append this to the end of your <code>zshrc</code>.</p>

<pre><code class="sh">zle-keymap-select () {
    if [ "$TERM" = "xterm-256color" ]; then
        if [ $KEYMAP = vicmd ]; then
            # the command mode for vi
            echo -ne "\e[2 q"
        else
            # the insert mode for vi
            echo -ne "\e[4 q"
        fi
    fi
}
</code></pre>

<p><em>Boom</em>, you&rsquo;ve just configured your cursor to change shape on the fly according to your editing mode!</p>
]]></content>
  </entry>
  
</feed>
